Q1
#include <stdio.h>

void sortArray(int arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

int binarySearch(int arr[], int size, int target) {
    int left = 0, right = size - 1;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] == target)
            return mid; // Return index if found
        if (arr[mid] < target)
            left = mid + 1; // Search right half
        else
            right = mid - 1; // Search left half
    }
    return -1; // Return -1 if not found
}

int main() {
    int size, target;
    printf("Enter the size of the array: ");
    scanf("%d", &size);
    int arr[size];
    printf("Enter %d elements:\n", size);
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }
    sortArray(arr, size);
    printf("Sorted array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
    printf("Enter the element to search: ");
    scanf("%d", &target);
    int result = binarySearch(arr, size, target);
    if (result != -1)
        printf("Element %d found at position %d.\n", target, result + 1);
    else
        printf("Element %d not found in the array.\n", target);
    return 0;
}


Q2
#include <stdio.h>

int n, target;
int set[20], subset[20];

// Function to print current subset
void printSubset(int length) {
    printf("{ ");
    for (int i = 0; i < length; i++)
        printf("%d ", subset[i]);
    printf("}\n");
}

// Recursive backtracking function
void sumOfSubsets(int index, int currentSum, int subsetSize) {
    if (currentSum == target) {
        printSubset(subsetSize);
        return;
    }

    for (int i = index; i < n; i++) {
        if (currentSum + set[i] <= target) {
            subset[subsetSize] = set[i];
            sumOfSubsets(i + 1, currentSum + set[i], subsetSize + 1);
        }
    }
}

int main() {
    printf("Enter number of elements: ");
    scanf("%d", &n);

    printf("Enter the elements:\n");
    for (int i = 0; i < n; i++)
        scanf("%d", &set[i]);

    printf("Enter the target sum: ");
    scanf("%d", &target);

    printf("Subsets with sum %d are:\n", target);
    sumOfSubsets(0, 0, 0);

    return 0;
}
