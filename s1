Q1
#include <stdio.h>

int selectionSort(int arr[], int size) 
{
    int count=0;
    for (int i = 0; i < size - 1; i++) 
    {
        int minIndex = i;
        count+=2;
        for (int j = i + 1; j < size; j++) 
        {
            count++;
            if (arr[j] < arr[minIndex]) 
            {
                minIndex = j;
                count+=2;
            }
        }
        if (minIndex != i) 
        {
            int temp = arr[i];
            arr[i] = arr[minIndex];
            arr[minIndex] = temp;
            count+=2;
        }
    }
    return count;
}

int main() {
    int size;
    printf("Enter the size of the array: ");
    scanf("%d", &size);
    int arr[size];
    printf("Enter %d elements:\n", size);
    for (int i = 0; i < size; i++) 
    {
        scanf("%d", &arr[i]);
    }
    int count = selectionSort(arr, size);
    printf("Sorted array in ascending order: ");
    for (int i = 0; i < size; i++) 
    {
        printf("%d ", arr[i]);
    }
    printf("\n");
    printf("time required %d :",count);
    return 0;
}

Q2
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int stepCount = 0; // Step counter to track the number of operations

// Function to swap two elements
void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
    stepCount++; // Increment step count for swap
}

// Partition function for Quick Sort
int partition(int arr[], int low, int high) {
    int pivot = arr[high]; // Choosing the last element as the pivot
    int i = (low - 1);

    for (int j = low; j < high; j++) {
        stepCount++; // Increment step count for comparison
        if (arr[j] < pivot) {
            i++;
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i + 1], &arr[high]);
    return (i + 1);
}

// Quick Sort function
void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);

        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

// Function to print an array
void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");
}

// Main function
int main() {
    int n;

    // Take user input for the number of elements
    printf("Enter the number of elements: ");
    scanf("%d", &n);

    int arr[n];

    // Seed the random number generator
    srand(time(0));

    // Generate random numbers
    printf("Generated Random Numbers:\n");
    for (int i = 0; i < n; i++) {
        arr[i] = rand() % 100; // Generate numbers between 0 and 99
        printf("%d ", arr[i]);
    }
    printf("\n");

    // Sort the array using Quick Sort
    quickSort(arr, 0, n - 1);

    // Print the sorted array
    printf("\nSorted Array:\n");
    printArray(arr, n);

    // Display the total step count
    printf("\nTotal Step Count (Comparisons + Swaps): %d\n", stepCount);

    return 0;
}
